trigger:
  - master

schedules:
  - cron: '0 20 * * *'
    displayName: Daily Check
    branches:
      include:
        - master
    always: 'true'

variables: 
  versionNano: "1809"

resources:
  repositories:
    - repository: templates
      type: github
      name: Justin-DynamicD/azure_pipeline-templates
      endpoint: GitHub

jobs:
  - job: getVersions
    pool:
      vmImage: 'windows-2019'
    steps:
      - task: PowerShell@2
        displayName: Download Required Scripts
        inputs:
          targetType: inline
          script: |
            git clone $env:TEMPLATE_REPO_URL
            cp .\$($env:TEMPLATE_REPO_NAME)\$($env:TEMPLATE_FILE) .\
            remove-item .\$env:TEMPLATE_REPO_NAME\ -Recurse -force -Confirm:$false
        env:
          TEMPLATE_REPO_URL: https://github.com/Justin-DynamicD/azure_pipeline-templates
          TEMPLATE_REPO_NAME: azure_pipeline-templates
          TEMPLATE_FILE: scripts\compare-gitreleases.ps1

      - task: PowerShell@2
        name: checkBuildNumber
        displayName: Check available build number
        inputs:
          filepath: compare-gitreleases.ps1
          arguments: -SourceGithubOwner prometheus -SourceGithubRepo alertmanager -TargetGithubOwner Justin-DynamicD -TargetGithubRepo docker-windows-alertmanager

      - task: PowerShell@2
        name: generateBA
        displayName: Generate Build_Arguments
        inputs:
          targetType: inline
          script: |
            $myargs = "--build-arg VERSIONNANO=$(versionNano) --build-arg VERSIONALERTMANAGER=$(releaseLatest)"
            write-output $myargs
            write-output "##vso[task.setvariable variable=buildArguments;isOutput=true]$myargs"

  - template: docker_container.yml@templates
    parameters:
      Container_Name: winalertmanager
      Container_Version: $[ dependencies.getVersions.outputs['checkBuildNumber.releaseLatest'] ]
      Build_Arguments: $[ dependencies.getVersions.outputs['generateBA.buildArguments'] ]
      dependsOn: getVersions
      NewBuild: $[ dependencies.getVersions.outputs['checkBuildNumber.newBuild'] ]
      Pool: 'windows-2019'
